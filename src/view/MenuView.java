/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.jtattoo.plaf.AbstractLookAndFeel;
import com.jtattoo.plaf.JTattooUtilities;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Window;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.LookAndFeel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.plaf.metal.MetalLookAndFeel;
import org.apache.log4j.Logger;
import org.joda.time.DateTime;
import util.GUIProperties;

/**
 *
 * @author anzt
 */
public class MenuView extends javax.swing.JFrame {

    /**
     * Creates new form MenuView
     */
    private static final Logger log = Logger.getLogger(MenuView.class);
    public static GUIProperties guiProps = new GUIProperties();
    public PenjualanView penjualanView;
    public PembelianView pembelianView;
    public BarangView barangView;
    public GantiPasswordView gantiPasswordView;
    public DataPembelianView dataPembelianView;
    public LaporanKeuntunganHarianView laporanKeuntunganHarianView;
    public LaporanPembelianHarianView pembelianHarianView;
    public LaporanPenjualanHarianView penjualanHarianView;
    public LaporanPiutangPembelianView piutangPembelianView;
    public LaporanPiutangPenjualanView piutangPenjualanView;

    public MenuView() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.ButtonGroup();
        deskMenu = new javax.swing.JDesktopPane();
        menuUtama = new javax.swing.JMenuBar();
        MenuMaster = new javax.swing.JMenu();
        ItemInputBrg = new javax.swing.JMenuItem();
        MenuTransaksi = new javax.swing.JMenu();
        ItemPenjualan = new javax.swing.JMenuItem();
        ItemPembelian = new javax.swing.JMenuItem();
        ItemDataPembelian = new javax.swing.JMenuItem();
        MenuLapTahunan = new javax.swing.JMenu();
        ItemPenjualanHarian = new javax.swing.JMenuItem();
        ItemPembelianHarian = new javax.swing.JMenuItem();
        ItemPiutangPenjualan = new javax.swing.JMenuItem();
        ItemPiutangPembelian = new javax.swing.JMenuItem();
        ItemKeuntunganHarian = new javax.swing.JMenuItem();
        MenuPengaturan = new javax.swing.JMenu();
        ItemGantiPass = new javax.swing.JMenuItem();
        GantiTema = new javax.swing.JMenu();
        jRadioButtonMenuItemAcryl = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemAero = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemAlumunium = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemBernstein = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemFast = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemGrafiti = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemHifi = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemLuna = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemMacOs = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemMint = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemSmart = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemTextured = new javax.swing.JRadioButtonMenuItem();
        itemBackupDb = new javax.swing.JMenuItem();
        ItemKeluar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MENU UTAMA");
        setResizable(false);

        javax.swing.GroupLayout deskMenuLayout = new javax.swing.GroupLayout(deskMenu);
        deskMenu.setLayout(deskMenuLayout);
        deskMenuLayout.setHorizontalGroup(
            deskMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1013, Short.MAX_VALUE)
        );
        deskMenuLayout.setVerticalGroup(
            deskMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 155, Short.MAX_VALUE)
        );

        MenuMaster.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/home.png"))); // NOI18N
        MenuMaster.setText("Master Data");

        ItemInputBrg.setText("Input Barang");
        ItemInputBrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemInputBrgActionPerformed(evt);
            }
        });
        MenuMaster.add(ItemInputBrg);

        menuUtama.add(MenuMaster);

        MenuTransaksi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/transaksi.png"))); // NOI18N
        MenuTransaksi.setText("Transaksi");

        ItemPenjualan.setText("Penjualan");
        ItemPenjualan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPenjualanActionPerformed(evt);
            }
        });
        MenuTransaksi.add(ItemPenjualan);

        ItemPembelian.setText("Pembelian");
        ItemPembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPembelianActionPerformed(evt);
            }
        });
        MenuTransaksi.add(ItemPembelian);

        ItemDataPembelian.setText("Data Pembelian");
        ItemDataPembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemDataPembelianActionPerformed(evt);
            }
        });
        MenuTransaksi.add(ItemDataPembelian);

        menuUtama.add(MenuTransaksi);

        MenuLapTahunan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/laporan.png"))); // NOI18N
        MenuLapTahunan.setText("Laporan");

        ItemPenjualanHarian.setText("Laporan Penjualan Harian");
        ItemPenjualanHarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPenjualanHarianActionPerformed(evt);
            }
        });
        MenuLapTahunan.add(ItemPenjualanHarian);

        ItemPembelianHarian.setText("Laporan Pembelian Harian");
        ItemPembelianHarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPembelianHarianActionPerformed(evt);
            }
        });
        MenuLapTahunan.add(ItemPembelianHarian);

        ItemPiutangPenjualan.setText("Laporan Piutang Penjualan");
        ItemPiutangPenjualan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPiutangPenjualanActionPerformed(evt);
            }
        });
        MenuLapTahunan.add(ItemPiutangPenjualan);

        ItemPiutangPembelian.setText("Laporan Piutang Pembelian");
        ItemPiutangPembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPiutangPembelianActionPerformed(evt);
            }
        });
        MenuLapTahunan.add(ItemPiutangPembelian);

        ItemKeuntunganHarian.setText("Laporan Keuntungan Harian");
        ItemKeuntunganHarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemKeuntunganHarianActionPerformed(evt);
            }
        });
        MenuLapTahunan.add(ItemKeuntunganHarian);

        menuUtama.add(MenuLapTahunan);

        MenuPengaturan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/setting.png"))); // NOI18N
        MenuPengaturan.setText("Pengaturan");

        ItemGantiPass.setText("Ganti Password");
        ItemGantiPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemGantiPassActionPerformed(evt);
            }
        });
        MenuPengaturan.add(ItemGantiPass);

        GantiTema.setText("Ganti Tema");

        bg.add(jRadioButtonMenuItemAcryl);
        jRadioButtonMenuItemAcryl.setText("Acryl");
        jRadioButtonMenuItemAcryl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemAcrylActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemAcryl);

        bg.add(jRadioButtonMenuItemAero);
        jRadioButtonMenuItemAero.setText("Aero");
        jRadioButtonMenuItemAero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemAeroActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemAero);

        bg.add(jRadioButtonMenuItemAlumunium);
        jRadioButtonMenuItemAlumunium.setText("Alumunium");
        jRadioButtonMenuItemAlumunium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemAlumuniumActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemAlumunium);

        bg.add(jRadioButtonMenuItemBernstein);
        jRadioButtonMenuItemBernstein.setText("Bernstein");
        jRadioButtonMenuItemBernstein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemBernsteinActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemBernstein);

        bg.add(jRadioButtonMenuItemFast);
        jRadioButtonMenuItemFast.setText("Fast");
        jRadioButtonMenuItemFast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemFastActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemFast);

        bg.add(jRadioButtonMenuItemGrafiti);
        jRadioButtonMenuItemGrafiti.setText("Grafiti");
        jRadioButtonMenuItemGrafiti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemGrafitiActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemGrafiti);

        bg.add(jRadioButtonMenuItemHifi);
        jRadioButtonMenuItemHifi.setText("Hifi");
        jRadioButtonMenuItemHifi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemHifiActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemHifi);

        bg.add(jRadioButtonMenuItemLuna);
        jRadioButtonMenuItemLuna.setText("Luna");
        jRadioButtonMenuItemLuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemLunaActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemLuna);

        bg.add(jRadioButtonMenuItemMacOs);
        jRadioButtonMenuItemMacOs.setText("Mac OS");
        jRadioButtonMenuItemMacOs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemMacOsActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemMacOs);

        bg.add(jRadioButtonMenuItemMint);
        jRadioButtonMenuItemMint.setText("Mint");
        jRadioButtonMenuItemMint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemMintActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemMint);

        bg.add(jRadioButtonMenuItemSmart);
        jRadioButtonMenuItemSmart.setText("Smart");
        jRadioButtonMenuItemSmart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemSmartActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemSmart);

        bg.add(jRadioButtonMenuItemTextured);
        jRadioButtonMenuItemTextured.setText("Texture");
        jRadioButtonMenuItemTextured.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemTexturedActionPerformed(evt);
            }
        });
        GantiTema.add(jRadioButtonMenuItemTextured);

        MenuPengaturan.add(GantiTema);

        itemBackupDb.setText("Backup Database");
        itemBackupDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBackupDbActionPerformed(evt);
            }
        });
        MenuPengaturan.add(itemBackupDb);

        ItemKeluar.setText("Keluar");
        ItemKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemKeluarActionPerformed(evt);
            }
        });
        MenuPengaturan.add(ItemKeluar);

        menuUtama.add(MenuPengaturan);

        setJMenuBar(menuUtama);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deskMenu)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deskMenu)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ItemPenjualanHarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPenjualanHarianActionPerformed
        // TODO add your handling code here:
        try {
            if (penjualanHarianView == null) {
                penjualanHarianView = new LaporanPenjualanHarianView();
                deskMenu.add(penjualanHarianView);
            } else {
                penjualanHarianView.toFront();
            }
            penjualanHarianView.setVisible(true);
            penjualanHarianView.setSelected(true);
            penjualanHarianView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan penjualanHarianView " + ex);
        }
    }//GEN-LAST:event_ItemPenjualanHarianActionPerformed

    private void ItemGantiPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemGantiPassActionPerformed
        // TODO add your handling code here:
        try {
            if (gantiPasswordView == null) {
                gantiPasswordView = new GantiPasswordView();
                Dimension desktopSize = deskMenu.getSize();
                Dimension jInternalFrameSize = gantiPasswordView.getSize();
                int width = (desktopSize.width - jInternalFrameSize.width) / 2;
                int height = (desktopSize.height - jInternalFrameSize.height) / 2;
                gantiPasswordView.setLocation(width, height);
                deskMenu.add(gantiPasswordView);
            } else {
                gantiPasswordView.toFront();
            }
            gantiPasswordView.setVisible(true);
            gantiPasswordView.setSelected(true);
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan Ganti Password View " + ex);
        }
    }//GEN-LAST:event_ItemGantiPassActionPerformed

    private void ItemInputBrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemInputBrgActionPerformed
        // TODO add your handling code here:
        try {
            if (barangView == null) {
                barangView = new BarangView();
                deskMenu.add(barangView);
            } else {
                barangView.toFront();
            }
            barangView.setVisible(true);
            barangView.setSelected(true);
            barangView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan Input Barang View " + ex);
        }
    }//GEN-LAST:event_ItemInputBrgActionPerformed

    private void ItemPembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPembelianActionPerformed
        // TODO add your handling code here:
        try {
            if (pembelianView == null) {
                pembelianView = new PembelianView();
                deskMenu.add(pembelianView);
            } else {
                pembelianView.toFront();
            }
            pembelianView.setVisible(true);
            pembelianView.setSelected(true);
            pembelianView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan Pembelian View " + ex);
        }
    }//GEN-LAST:event_ItemPembelianActionPerformed

    private void ItemPenjualanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPenjualanActionPerformed
        // TODO add your handling code here:
        try {
            if (penjualanView == null) {
                penjualanView = new PenjualanView();
                deskMenu.add(penjualanView);
            } else {
                penjualanView.toFront();
            }
            penjualanView.setVisible(true);
            penjualanView.setSelected(true);
            penjualanView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan Penjualan View " + ex);
        }
    }//GEN-LAST:event_ItemPenjualanActionPerformed

    private void ItemKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemKeluarActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Apakah Anda Yakin Ingin Keluar?") == JOptionPane.YES_OPTION) {
            LoginView loginView = new LoginView();
            loginView.setVisible(true);
        }
    }//GEN-LAST:event_ItemKeluarActionPerformed

    private void jRadioButtonMenuItemMacOsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemMacOsActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_MCWIN);
    }//GEN-LAST:event_jRadioButtonMenuItemMacOsActionPerformed

    private void jRadioButtonMenuItemAcrylActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemAcrylActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_ACRYL);
    }//GEN-LAST:event_jRadioButtonMenuItemAcrylActionPerformed

    private void jRadioButtonMenuItemAeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemAeroActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_AERO);
    }//GEN-LAST:event_jRadioButtonMenuItemAeroActionPerformed

    private void jRadioButtonMenuItemAlumuniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemAlumuniumActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_ALUMINIUM);
    }//GEN-LAST:event_jRadioButtonMenuItemAlumuniumActionPerformed

    private void jRadioButtonMenuItemBernsteinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemBernsteinActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_BERNSTEIN);
    }//GEN-LAST:event_jRadioButtonMenuItemBernsteinActionPerformed

    private void jRadioButtonMenuItemFastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemFastActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_FAST);
    }//GEN-LAST:event_jRadioButtonMenuItemFastActionPerformed

    private void jRadioButtonMenuItemGrafitiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemGrafitiActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_GRAPHITE);
    }//GEN-LAST:event_jRadioButtonMenuItemGrafitiActionPerformed

    private void jRadioButtonMenuItemHifiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemHifiActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_HIFI);
    }//GEN-LAST:event_jRadioButtonMenuItemHifiActionPerformed

    private void jRadioButtonMenuItemLunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemLunaActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_LUNA);
    }//GEN-LAST:event_jRadioButtonMenuItemLunaActionPerformed

    private void jRadioButtonMenuItemMintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemMintActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_MINT);
    }//GEN-LAST:event_jRadioButtonMenuItemMintActionPerformed

    private void jRadioButtonMenuItemSmartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemSmartActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_SMART);
    }//GEN-LAST:event_jRadioButtonMenuItemSmartActionPerformed

    private void jRadioButtonMenuItemTexturedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemTexturedActionPerformed
        // TODO add your handling code here:
        this.updateLookAndFeel(GUIProperties.PLAF_TEXTURE);
    }//GEN-LAST:event_jRadioButtonMenuItemTexturedActionPerformed

    private void ItemDataPembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemDataPembelianActionPerformed
        // TODO add your handling code here:
        try {
            if (dataPembelianView == null) {
                dataPembelianView = new DataPembelianView();
                deskMenu.add(dataPembelianView);
            } else {
                dataPembelianView.toFront();
            }
            dataPembelianView.setVisible(true);
            dataPembelianView.setSelected(true);
            dataPembelianView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan dataPembelianView View " + ex);
        }
    }//GEN-LAST:event_ItemDataPembelianActionPerformed

    private void ItemPembelianHarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPembelianHarianActionPerformed
        // TODO add your handling code here:
        try {
            if (pembelianHarianView == null) {
                pembelianHarianView = new LaporanPembelianHarianView();
                deskMenu.add(pembelianHarianView);
            } else {
                pembelianHarianView.toFront();
            }
            pembelianHarianView.setVisible(true);
            pembelianHarianView.setSelected(true);
            pembelianHarianView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan pembelianHarianView View " + ex);
        }
    }//GEN-LAST:event_ItemPembelianHarianActionPerformed

    private void ItemPiutangPenjualanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPiutangPenjualanActionPerformed
        // TODO add your handling code here:
        try {
            if (piutangPenjualanView == null) {
                piutangPenjualanView = new LaporanPiutangPenjualanView();
                deskMenu.add(piutangPenjualanView);
            } else {
                piutangPenjualanView.toFront();
            }
            piutangPenjualanView.setVisible(true);
            piutangPenjualanView.setSelected(true);
            piutangPenjualanView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan piutangPenjualanView View " + ex);
        }
    }//GEN-LAST:event_ItemPiutangPenjualanActionPerformed

    private void ItemPiutangPembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPiutangPembelianActionPerformed
        // TODO add your handling code here:
        try {
            if (piutangPembelianView == null) {
                piutangPembelianView = new LaporanPiutangPembelianView();
                deskMenu.add(piutangPembelianView);
            } else {
                piutangPembelianView.toFront();
            }
            piutangPembelianView.setVisible(true);
            piutangPembelianView.setSelected(true);
            piutangPembelianView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan piutangPembelianView View " + ex);
        }
    }//GEN-LAST:event_ItemPiutangPembelianActionPerformed

    private void ItemKeuntunganHarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemKeuntunganHarianActionPerformed
        // TODO add your handling code here:
        try {
            if (laporanKeuntunganHarianView == null) {
                laporanKeuntunganHarianView = new LaporanKeuntunganHarianView();
                deskMenu.add(laporanKeuntunganHarianView);
            } else {
                laporanKeuntunganHarianView.toFront();
            }
            laporanKeuntunganHarianView.setVisible(true);
            laporanKeuntunganHarianView.setSelected(true);
            laporanKeuntunganHarianView.setSize(deskMenu.getSize());
        } catch (PropertyVetoException ex) {
            log.error("Error Menampilkan laporanKeuntunganHarianView " + ex);
        }
    }//GEN-LAST:event_ItemKeuntunganHarianActionPerformed

    private void itemBackupDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBackupDbActionPerformed
        // TODO add your handling code here:
        DateTime d = new DateTime();
        String command = "C:\\xampp\\mysql\\bin\\mysqldump.exe -u root klontong -r " + d.toString("d-MM-yyyy") + "_backup" + ".sql";
        //C:\xampp\mysql\bin
        Process p;
        int processComplete;
        try {
            // TODO add your handling code here:
            Runtime runtime = Runtime.getRuntime();
            p = runtime.exec(command);
            processComplete = p.waitFor();
            if (processComplete == 0) {
                JOptionPane.showMessageDialog(this, "Database berhasil dibackup");
            } else {
                JOptionPane.showMessageDialog(this, "Database gagal dibackup! status="+processComplete, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException | InterruptedException ex) {
            log.error(ex);
            JOptionPane.showMessageDialog(this, "Database gagal dibackup! " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_itemBackupDbActionPerformed

    public void updateLookAndFeel(String lf) {
        try {
            // If new look handles the WindowDecorationStyle not in the same manner as the old look
            // we have to reboot our application.

            LookAndFeel oldLAF = UIManager.getLookAndFeel();
            boolean oldDecorated = false;
            if (oldLAF instanceof MetalLookAndFeel) {
                oldDecorated = true;
            }
            if (oldLAF instanceof AbstractLookAndFeel) {
                oldDecorated = AbstractLookAndFeel.getTheme().isWindowDecorationOn();
            }
            // reset to default theme
            switch (lf) {
                case GUIProperties.PLAF_ACRYL:
                    com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_AERO:
                    com.jtattoo.plaf.aero.AeroLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_ALUMINIUM:
                    com.jtattoo.plaf.aluminium.AluminiumLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_BERNSTEIN:
                    com.jtattoo.plaf.bernstein.BernsteinLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_FAST:
                    com.jtattoo.plaf.fast.FastLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_GRAPHITE:
                    com.jtattoo.plaf.graphite.GraphiteLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_HIFI:
                    com.jtattoo.plaf.hifi.HiFiLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_LUNA:
                    com.jtattoo.plaf.luna.LunaLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_MCWIN:
                    com.jtattoo.plaf.mcwin.McWinLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_MINT:
                    com.jtattoo.plaf.mint.MintLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_SMART:
                    com.jtattoo.plaf.smart.SmartLookAndFeel.setTheme("Default");
                    break;
                case GUIProperties.PLAF_TEXTURE:
                    com.jtattoo.plaf.texture.TextureLookAndFeel.setTheme("Default");
                    break;
            }
            guiProps.setTheme("Default");
            guiProps.setLookAndFeel(lf);
            UIManager.setLookAndFeel(guiProps.getLookAndFeel());

            LookAndFeel newLAF = UIManager.getLookAndFeel();
            boolean newDecorated = false;
            if (newLAF instanceof MetalLookAndFeel) {
                newDecorated = true;
            }
            if (newLAF instanceof AbstractLookAndFeel) {
                newDecorated = AbstractLookAndFeel.getTheme().isWindowDecorationOn();
            }
            if (oldDecorated == newDecorated) {
                updateComponentTree();
            }
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            System.out.println("Failed loading L&F: " + guiProps.getLookAndFeel() + " Exception: " + ex.getMessage());
        }
    }

    private void updateComponentTree() {
        // Update the application
        getRootPane().updateUI();
        if (JTattooUtilities.getJavaVersion() >= 1.6) {
            Window windows[] = Window.getWindows();
            for (Window window : windows) {
                if (window.isDisplayable()) {
                    SwingUtilities.updateComponentTreeUI(window);
                }
            }
        } else {
            Frame frames[] = Frame.getFrames();
            for (Frame frame : frames) {
                if (frame.isDisplayable()) {
                    SwingUtilities.updateComponentTreeUI(frame);
                }
            }
        }
        //menuUtama.updateLookAndFeel();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu GantiTema;
    private javax.swing.JMenuItem ItemDataPembelian;
    private javax.swing.JMenuItem ItemGantiPass;
    private javax.swing.JMenuItem ItemInputBrg;
    private javax.swing.JMenuItem ItemKeluar;
    private javax.swing.JMenuItem ItemKeuntunganHarian;
    private javax.swing.JMenuItem ItemPembelian;
    private javax.swing.JMenuItem ItemPembelianHarian;
    private javax.swing.JMenuItem ItemPenjualan;
    private javax.swing.JMenuItem ItemPenjualanHarian;
    private javax.swing.JMenuItem ItemPiutangPembelian;
    private javax.swing.JMenuItem ItemPiutangPenjualan;
    private javax.swing.JMenu MenuLapTahunan;
    private javax.swing.JMenu MenuMaster;
    private javax.swing.JMenu MenuPengaturan;
    private javax.swing.JMenu MenuTransaksi;
    private javax.swing.ButtonGroup bg;
    public javax.swing.JDesktopPane deskMenu;
    private javax.swing.JMenuItem itemBackupDb;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemAcryl;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemAero;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemAlumunium;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemBernstein;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemFast;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemGrafiti;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemHifi;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemLuna;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemMacOs;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemMint;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemSmart;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemTextured;
    private javax.swing.JMenuBar menuUtama;
    // End of variables declaration//GEN-END:variables
}
